

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3057-7374-2C			    |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1197F05B919D250C831F6A031EFD48F2
; Input	CRC32 :	38D211E2

; ---------------------------------------------------------------------------
; File Name   :	C:\MicroSO\trunk\LABS\DEV-ASM\FAT\FAT32\EX02\FAT32.BIN
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 0200h Loaded length: 0200h

		.286
		.model small

; ===========================================================================

; Segment type:	Pure code
seg000		segment public 'CODE'
		assume cs:seg000
		assume es:nothing, ss:nothing, ds:nothing
		xor	ax, ax
		mov	ss, ax
		mov	sp, 7C00h
		sti
		push	ax
		pop	es
		push	ax
		pop	ds
		cld
		mov	si, 7C1Bh
		mov	di, 61Bh
		push	ax
		push	di
		mov	cx, 1E5h
		rep movsb
		retf
; ---------------------------------------------------------------------------
		mov	si, 7BEh
		mov	cl, 4

loc_20:					; ...
		cmp	[si], ch
		jl	short loc_2D
		jnz	short loc_3B
		add	si, 10h
		loop	loc_20
		int	18h		; TRANSFER TO ROM BASIC
					; causes transfer to ROM-based BASIC (IBM-PC)
					; often	reboots	a compatible; often has	no effect at all

loc_2D:					; ...
		mov	dx, [si]
		mov	bp, si

loc_31:					; ...
		add	si, 10h
		dec	cx
		jz	short loc_4D
		cmp	[si], ch
		jz	short loc_31

loc_3B:					; ...
		mov	si, 710h

loc_3E:					; ...
		dec	si

loc_3F:					; ...
		lodsb

loc_40:					; ...
		cmp	al, 0
		jz	short loc_3E
		mov	bx, 7
		mov	ah, 0Eh
		int	10h		; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
					; AL = character, BH = display page (alpha modes)
					; BL = foreground color	(graphics modes)

loc_4B:					; ...
		jmp	short loc_3F
; ---------------------------------------------------------------------------

loc_4D:					; ...
		mov	[bp+25h], ax
		xchg	ax, si
		mov	al, [bp+4]
		mov	ah, 6
		cmp	al, 0Eh
		jz	short loc_6B
		mov	ah, 0Bh
		cmp	al, 0Ch
		jz	short loc_65

loc_60:					; ...
		cmp	al, ah
		jnz	short loc_8F
		inc	ax

loc_65:					; ...
		mov	byte ptr [bp+25h], 6
		jnz	short loc_8F

loc_6B:					; ...
		mov	bx, 55AAh
		push	ax
		mov	ah, 41h	; 'A'
		int	13h		; DISK - Check for INT 13h Extensions
					; BX = 55AAh, DL = drive number
					; Return: CF set if not	supported
					; AH = extensions version
					; BX = AA55h
					; CX = Interface support bit map
		pop	ax
		jb	short loc_8C
		cmp	bx, 0AA55h
		jnz	short loc_8C
		test	cl, 1
		jz	short loc_8C
		mov	ah, al
		mov	[bp+24h], dl
		mov	word ptr ds:6A1h, 1EEBh

loc_8C:					; ...
		mov	[bp+4],	ah

loc_8F:					; ...
		mov	di, 0Ah

loc_92:					; ...
		mov	ax, 201h
		mov	bx, sp
		xor	cx, cx
		cmp	di, 5
		jg	short loc_A1
		mov	cx, [bp+25h]

loc_A1:					; ...
		add	cx, [bp+2]
		int	13h		; DISK - READ SECTORS INTO MEMORY
					; AL = number of sectors to read, CH = track, CL = sector
					; DH = head, DL	= drive, ES:BX -> buffer to fill
					; Return: CF set on error, AH =	status,	AL = number of sectors read

loc_A6:					; ...
		jb	short loc_D1
		mov	si, 746h
		cmp	word ptr ds:7DFEh, 0AA55h
		jz	short loc_10D
		sub	di, 5
		jg	short loc_92

loc_B8:					; ...
		test	si, si
		jnz	short loc_3F
		mov	si, 727h
		jmp	short loc_4B
; ---------------------------------------------------------------------------
		cbw
		xchg	ax, cx
		push	dx
		cwd
		add	ax, [bp+8]
		adc	dx, [bp+0Ah]
		call	sub_E0
		pop	dx
		jmp	short loc_A6
; ---------------------------------------------------------------------------

loc_D1:					; ...
		dec	di
		jz	short loc_B8
		xor	ax, ax
		int	13h		; DISK - RESET DISK SYSTEM
					; DL = drive (if bit 7 is set both hard	disks and floppy disks reset)
		jmp	short loc_92
; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================


sub_E0		proc near		; ...
		push	si
		xor	si, si
		push	si
		push	si
		push	dx
		push	ax
		push	es
		push	bx
		push	cx
		mov	si, 10h
		push	si
		mov	si, sp
		push	ax
		push	dx
		mov	ax, 4200h
		mov	dl, [bp+24h]
		int	13h		; DISK - IBM/MS	Extension - EXTENDED READ (DL -	drive, DS:SI - disk address packet)
		pop	dx
		pop	ax
		lea	sp, [si+10h]
		jb	short loc_10B

loc_101:				; ...
		inc	ax
		jnz	short loc_105
		inc	dx

loc_105:				; ...
		add	bh, 2
		loop	loc_101
		clc

loc_10B:				; ...
		pop	si
		retn
sub_E0		endp ; sp-analysis failed

; ---------------------------------------------------------------------------

loc_10D:				; ...
		jmp	short loc_183
; ---------------------------------------------------------------------------
		db  49h	; I
aNvalidPartitio	db 'nvalid partition table',0
		db  45h	; E
aRrorLoadingOpe	db 'rror loading operating system',0
		db  4Dh	; M
aIssingOperatin	db 'issing operating system',0
		db 24h dup(0)
; ---------------------------------------------------------------------------

loc_183:				; ...
		mov	di, sp
		push	ds
		push	di
		mov	si, bp
		retf
; ---------------------------------------------------------------------------
		db 34h dup(0), 80h, 2 dup(1), 0, 0Bh, 7Fh, 0BFh, 0Ah, 3Fh
		db 3 dup(0), 41h, 5Ah, 40h, 31h	dup(0),	55h, 0AAh
seg000		ends


		end
