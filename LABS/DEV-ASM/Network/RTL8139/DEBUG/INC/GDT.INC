
;											GDT - TABELA GLOBAL DE DESCRITORES DE SEGMENTOS
;										
;										 GRANULARIDADE: 0 - BYTE 1 - 4 KB 
;														  |
;	LIMITE DE ACESSO A MEMORIA, P/ ESTE SEGMENTO   0xFFFF |    0xF = [0xFFFFF = 1048575] * 4096(4KB) = 4294963200 BYTES | 4194300 MB | 4 GB
;	 _______|_______									  |   __|_
;	|				|									  |   |  |
;	11111111 11111111 00000000 00000000 00000000 10011010 11001111 00000000
;					  |_______________| |______| ||||||||  |	   |______|
;							  |				|	 ||||||||  |		  |								 
;	SETUP DO SEGMENTO		0xFFFF		  0xFF   ||||||||  |		 0xFF - O SEGMENTO PODE INICIAR DE 0 À 0xFFFFFFFF | 4GB
;												 ||||||||  |
;												 |||||||| SIZE: 0 SEGMENTO DE 16 BITS | 1 SEGMENTO DE 32 BITS
;												 ||||||||
;												 |||||||0 - SEMPRE 0 - QUANDO O SEGMENTO É REQUISITADO A CPU MUDA PRA 1
;												 ||||||1 -- SOMENTE LEITURA 0 - ESCRITA - 1 
;												 |||||0 --- SE 0 - O CÓDIGO SÓ PODE SER EXECUTADO SOMENTE PELO MESMO NIVEL DE ANEL - SE 1 DE QUALQUER NIVEL DE ANEL
;												 ||||1 ---- SE 0 - SEGMENTO DE DADOS - SE 1 SEGMENTO DE CÓDIGO
;												 |00 ------ NÍVEL DO ANEL. DE: 0 À 3
;												 1 -------- ESTE SEMPRE SERÁ 1
;												 
;	11111111 11111111 00000000 00000000 00000000 10011010 00000000 00000000	
;    |_______________|									  |______|	
;			|												  |		
;		 0xFFFF												 0x0 - EM DESCRITOR DE 16 BITS A GRANULARIDADE SERÁ SEMPRE 0
;		 
;	LIMITE DE ACESSO DO DESCRITOR EM 16 BITS É DE NO MÁXIMO 64K | 0xFFFF | 65535 BYTES

DATASEG16 SEGMENT USE16

	GDTR 			LABEL FWORD		; TAMANHO MÁXIMO DE UMA GDT 65535 BYTES
	GDT_LIMIT 		DW GDT_SIZE-1	; TOTAL DE DESCRITORES 8192 * 8 BYTES CADA = 65536 BYTES | (65536 - 1 = 65535)
	GDT_ADDR 		DD ?			; ENDEREÇO DA MATRIZ DE DESCRITORES: GDTR

	GDT_START 		EQU $
	NULLDESC 		DESC <0,0,0,0,0,0>								; 00h
	CODEDESC16 		DESC <0FFFFH,,,10011110B,0H,>					; 08h
	DATADESC16 		DESC <0FFFFH,,,10010010B,0H,>					; 10h
	CODEDESC32 		DESC <0FFFFH,,,10011110B,11001111B,>			; 18h
	DATADESC32 		DESC <0FFFFH,,,10010010B,11001111B,>			; 20h
	VIDEODESC32 	DESC <0FFFFH,08000H,0BH,10010010B,01000000B,0>	; 28h
	DEBUGDESC32		DESC <0FFFFH,,,10011110B,11001111B,>			; 30h
	DDATADESC32 	DESC <0FFFFH,,,10010010B,11001111B,>			; 38h
	FULLDTDESC32 	DESC <0FFFFH,0000H,00H,10010010B,11001111B,>	; 40h
	GDT_SIZE 		EQU ($-GDT_START)

	SELCODEDESC16 	EQU (OFFSET CODEDESC16 - GDT_START)
	SELDATADESC16 	EQU (OFFSET DATADESC16 - GDT_START)
	SELDATADESC32 	EQU (OFFSET DATADESC32 - GDT_START)
	SELCODEDESC32 	EQU (OFFSET CODEDESC32 - GDT_START)
	SELVIDEODESC32 	EQU (OFFSET VIDEODESC32 - GDT_START)
	
	SELDEBUGDESC32 	EQU (OFFSET DEBUGDESC32 - GDT_START)
	SELDDATADESC32 	EQU (OFFSET DDATADESC32 - GDT_START)
	SELFULLDTDESC32 EQU (OFFSET FULLDTDESC32 - GDT_START)
	
DATASEG16 ENDS

CODESEG16 SEGMENT USE16  						; START THE 16BIT CODE SEGMENT
	ASSUME CS:SEGS16,DS:SEGS16
	
	SETUPGDT PROC
	
		PUSHA
		
		; SETUP ALL OUR DESCRIPTORS
		MOV 	EAX, PRG_BASE16
		MOV 	CODEDESC16.BASE_LO, AX
		MOV 	DATADESC16.BASE_LO, AX
		SHR 	EAX, 16
		MOV 	CODEDESC16.BASE_MID, AL
		MOV 	DATADESC16.BASE_MID, AL
		MOV 	CODEDESC16.BASE_HI, AH
		MOV 	DATADESC16.BASE_HI, AH

		MOV 	EAX, PRG_BASE32
		MOV 	CODEDESC32.BASE_LO, AX
		MOV 	DATADESC32.BASE_LO, AX
		SHR 	EAX, 16
		MOV 	CODEDESC32.BASE_MID, AL
		MOV 	DATADESC32.BASE_MID, AL
		MOV 	CODEDESC32.BASE_HI, AH
		MOV 	DATADESC32.BASE_HI, AH
		
		MOV		EAX, DBG_BASE32
		MOV 	DEBUGDESC32.BASE_LO, AX
		MOV 	DDATADESC32.BASE_LO, AX
		SHR 	EAX, 16
		MOV 	DEBUGDESC32.BASE_MID, AL
		MOV 	DDATADESC32.BASE_MID, AL
		MOV 	DEBUGDESC32.BASE_HI, AH
		MOV 	DDATADESC32.BASE_HI, AH
		
		POPA
		
		RET
		
	SETUPGDT ENDP

CODESEG16 ENDS