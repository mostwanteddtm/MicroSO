#masm#

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	            |
; |			 License info: 48-3057-7374-2C			                        |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	        |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F9897CF4B744825B58246BF1E8D09144
; Input	CRC32 :	36CDEC6D

; File Name   :	C:\MicroSO\trunk\LABS\DEV-ASM_C\Passo-19\MAIN.COM
; Format      :	MS-DOS COM-file
; Base Address:	1000h Range: 10100h-1015Ch Loaded length: 5Ch

		.286p
		.model tiny

; ===========================================================================

                                                        ; Segment type:	Pure code
seg000		segment	word public 'CODE'
		assume cs:seg000
		org 100h
		assume es:nothing, ss:nothing, ds:seg000

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

		public start
start		proc    near 
    
    		push	cs
    		pop	    ax
    		mov	    ds, ax
    		mov	    es, ax
    		assume  es:seg000
    		call	_main
    		int	    20h		                            ; DOS -	PROGRAM	TERMINATION  
		
start		endp			                            ; returns to DOS--identical to INT 21/AH=00h

; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
		retn
; ---------------------------------------------------------------------------
;		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

                                                        ; int __cdecl main(int argc, const char	**argv,	const char **envp)
_main		proc    near		                        ; CODE XREF: start+6p

var_4		= word ptr -4
argc		= dword	ptr  4
argv		= word ptr  8
envp		= word ptr  0Ch

    		enter	4, 0
    		push	si
    		push	di
    		mov	    [bp+var_4], offset aMarcosRoberto   ; C- char *nome = "Marcos Roberto !!";
    		push	[bp+var_4]                          ; printf(nome);
    		call	printf
    		add	    sp, 2
    		pop	    di
    		pop	    si
    		leave
    		retn   
    		
_main		endp


; =============== S U B	R O U T	I N E =======================================


_printf		proc    near		                        ; CODE XREF: printf+9p 
    
		    mov	    si, [bp+4]
		    mov	    ah, 0Eh

cprintf:				                                ; CODE XREF: _printf+Dj
    		lodsb
    		cmp	    al, 0
    		jz	    short eprintf
    		int	    10h		                            ; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
                                    					; AL = character, BH = display page (alpha modes)
                                    					; BL = foreground color	(graphics modes)
		    dec	    cx
		    jmp	    short cprintf
; ---------------------------------------------------------------------------

eprintf:				                                ; CODE XREF: _printf+8j
		    retn
		    
_printf		endp


; =============== S U B	R O U T	I N E =======================================

                                                        ; Attributes: bp-based frame

printf		proc     near		                        ; CODE XREF: _main+Ep

arg_0		= word ptr  4

    		enter	2, 0
    		push	si
    		push	di
    		push	[bp+arg_0]
    		call	_printf
    		add	    sp, 2
    		pop	    di
    		pop	    si
    		leave
    		retn  
		
printf		endp

; ---------------------------------------------------------------------------
;		align 2
aMarcosRoberto	db 'Marcos Roberto !!',0                ; DATA XREF: _main+6o
seg000		ends


		end start
