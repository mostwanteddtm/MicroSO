#masm#

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2014 Hex-Rays, <support@hex-rays.com>	            |
; |			 License info: 48-3057-7374-2C			                        |
; |	Zhou Tao, Jiangsu Australia Sinuo Network Technology Co., Ltd.	        |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D9A4E4986EF881A0DB57CD113EF33B25
; Input	CRC32 :	5E03A337

; File Name   :	C:\MicroSO\trunk\LABS\DEV-ASM_C\Passo-19\MAIN.COM
; Format      :	MS-DOS COM-file
; Base Address:	1000h Range: 10100h-10184h Loaded length: 84h

		.286p
		.model tiny

; ===========================================================================

                                                                ; Segment type:	Pure code
seg000		segment	word public 'CODE'
		assume cs:seg000
		org 100h
		assume es:nothing, ss:nothing, ds:seg000

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

		public start
start		proc    near 
    
    		push	cs
    		pop	    ax
    		mov	    ds, ax
    		mov	    es, ax
    		assume  es:seg000
    		call	_main
    		int	    20h		                                    ; DOS -	PROGRAM	TERMINATION 
    		
start		endp			                                    ; returns to DOS--identical to INT 21/AH=00h

                                                                ; [00000001 BYTES: COLLAPSED FUNCTION _fmemcpy.	PRESS KEYPAD CTRL-"+" TO EXPAND]
                                                                ; [00000001 BYTES: COLLAPSED FUNCTION __fmemset. PRESS KEYPAD CTRL-"+" TO EXPAND]
;		align 2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

                                                                ; int __cdecl main(int argc, const char	**argv,	const char **envp)
_main		proc near		                                    ; CODE XREF: start+6p

var_42		= byte ptr -42h
var_30		= byte ptr -30h
argc		= dword	ptr  4
argv		= word ptr  8
envp		= word ptr  0Ch

    		enter	42h, 0
    		push	si
    		push	di
    		push	12h
    		mov	    ax, offset aMarcosRoberto                   ; C - char nome[64] = "Marcos Roberto !!"
    		mov	    dx, ds                                      ; printf(nome);
    		push	dx
    		push	ax
    		lea	    ax, [bp+var_42]
    		mov	    dx, ss
    		push	dx
    		push	ax
    		nop
    		push	cs
    		call	_fmemcpy
    		add	    sp, 0Ah
    		push	2Eh
    		push	0
    		lea	    ax, [bp+var_30]
    		mov	    dx, ss
    		push	dx
    		push	ax
    		nop
    		push	cs
    		call	_fmemset
    		add	    sp, 8 
    		lea     ax, [bp+var_42]
    		push	ax
    		call	printf
    		add	    sp, 2
    		pop	    di
    		pop	    si
    		leave
    		retn      
    		
_main		endp                                                 ; sp-analysis failed 

_fmemcpy    PROC
             
            push    bp  
            push    ax
            mov     bp, sp
            mov     si, word ptr [bp+0Ch]
            mov     cx, word ptr [bp+10h] 
            mov     ax, ds
            mov     es, ax
            mov     di, word ptr [bp]                            
            rep     movsb
            pop     ax 
            pop     bp
            ret
    
_fmemcpy    ENDP   

_fmemset    PROC 

            ret    
    
_fmemset    ENDP

; ---------------------------------------------------------------------------
;		align 2

; =============== S U B	R O U T	I N E =======================================


_printf		proc    near		                                ; CODE XREF: printf+9p  
    
		    mov	    si, [bp+4]
		    mov	    ah, 0Eh

cprintf:				                                        ; CODE XREF: _printf+Dj
    		lodsb
    		cmp	    al, 0
    		jz	    short eprintf
    		int	    10h		                                    ; - VIDEO - WRITE CHARACTER AND	ADVANCE	CURSOR (TTY WRITE)
                                            					; AL = character, BH = display page (alpha modes)
                                            					; BL = foreground color	(graphics modes)
    		dec	    cx
    		jmp	    short cprintf
; ---------------------------------------------------------------------------

eprintf:				; CODE XREF: _printf+8j
		    retn    
		    
_printf		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

printf		proc near		                                    ; CODE XREF: _main+35p

arg_0		= word ptr  4

    		enter	2, 0
    		push	si
    		push	di
    		push	[bp+arg_0]
    		call	_printf
    		add	    sp, 2
    		pop	    di
    		pop	    si
    		leave
    		retn 
    		
printf		endp

; ---------------------------------------------------------------------------
;		align 2
aMarcosRoberto	db 'Marcos Roberto !!',0                        ; DATA XREF: _main+8o
seg000		ends


		end start
