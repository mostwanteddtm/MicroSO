INCLUDE DEBUG.INC
INCLUDE DEFS.INC
INCLUDE A20.INC
INCLUDE IRQ0.INC
INCLUDE IRQ1.INC
INCLUDE IRQ8.INC
INCLUDE GDT.INC
INCLUDE IDT.INC

PUBLIC CHECKKEYPRESS

EXTERN KEYPRESSED:BYTE
EXTERN DEBUGPMODE:DWORD

DATASEG16 SEGMENT USE16 

	PRG_BASE16 		DD ?    						
	PRG_BASE32 		DD ? 
	DBG_BASE32 		DD ?

DATASEG16 ENDS

CODESEG16 SEGMENT USE16  						; START THE 16BIT CODE SEGMENT
	ASSUME CS:SEGS16,DS:SEGS16

	START16 PROC

		CLD

		MOV		AX, CS
		MOV		DS, AX 
		MOV		ES, AX
		
		MOV		AX, 03h
		INT		10h
		
		CALL	ENABLEA20
		CALL	ENABLEIRQ8 

		XOR 	EAX, EAX						; SETUP SOME OTHER VARIABLES
		MOV 	AX, CS
		SHL 	EAX, 4    						; LINEAR ADDR
		MOV 	PRG_BASE16,EAX

		XOR 	EAX, EAX
		MOV 	AX, SEGS32
		SHL 	EAX, 4
		MOV 	PRG_BASE32, EAX  				; WE WILL NEED THIS LATER
		
		XOR		EAX, EAX
		MOV 	EAX, DBGS32
		SHL		EAX, 4
		MOV		DBG_BASE32, EAX

		CALL	SETUPGDT

		MOV 	EAX, PRG_BASE16					; SETUP GDT BASE
		ADD 	EAX, GDT_START
		MOV 	GDT_ADDR, EAX
		
		MOV 	EAX, PRG_BASE16					; SETUP IDT BASE
		ADD 	EAX, IDT_START
		MOV 	IDT_ADDR, EAX
												; WE ARE NOW READY TO MOVE TO 16BIT PMODE 
		CLI   									; NO MORE IRQS ALLOWED PAST THIS POINT

		SIDT	[POLD]
		LIDT 	[IDTR]
		LGDT 	[GDTR]

		MOV 	EAX, CR0						; GOTO PMODE!
		OR 		AL, 1           				; SET PM BIT
		MOV 	CR0, EAX       					; WE ARE NOW IN 16BIT PMODE
		
		DB 		0EAh, 0h, 0h, SELCODEDESC32, 0h ; jmp to PMODE and execute
		
	START16 ENDP

CODESEG16 ENDS